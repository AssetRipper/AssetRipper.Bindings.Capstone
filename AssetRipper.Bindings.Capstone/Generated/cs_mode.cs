namespace AssetRipper.Bindings.Capstone;

public enum cs_mode
{
    CS_MODE_LITTLE_ENDIAN = 0,
    CS_MODE_ARM = 0,
    CS_MODE_16 = 1 << 1,
    CS_MODE_32 = 1 << 2,
    CS_MODE_64 = 1 << 3,
    CS_MODE_THUMB = 1 << 4,
    CS_MODE_MCLASS = 1 << 5,
    CS_MODE_V8 = 1 << 6,
    CS_MODE_V9 = 1 << 4,
    CS_MODE_QPX = 1 << 4,
    CS_MODE_SPE = 1 << 5,
    CS_MODE_BOOKE = 1 << 6,
    CS_MODE_PS = 1 << 7,
    CS_MODE_M68K_000 = 1 << 1,
    CS_MODE_M68K_010 = 1 << 2,
    CS_MODE_M68K_020 = 1 << 3,
    CS_MODE_M68K_030 = 1 << 4,
    CS_MODE_M68K_040 = 1 << 5,
    CS_MODE_M68K_060 = 1 << 6,
    CS_MODE_BIG_ENDIAN = unchecked((int)(1U << 31)),
    CS_MODE_MIPS16 = CS_MODE_16,
    CS_MODE_MIPS32 = CS_MODE_32,
    CS_MODE_MIPS64 = CS_MODE_64,
    CS_MODE_MICRO = 1 << 4,
    CS_MODE_MIPS1 = 1 << 5,
    CS_MODE_MIPS2 = 1 << 6,
    CS_MODE_MIPS32R2 = 1 << 7,
    CS_MODE_MIPS32R3 = 1 << 8,
    CS_MODE_MIPS32R5 = 1 << 9,
    CS_MODE_MIPS32R6 = 1 << 10,
    CS_MODE_MIPS3 = 1 << 11,
    CS_MODE_MIPS4 = 1 << 12,
    CS_MODE_MIPS5 = 1 << 13,
    CS_MODE_MIPS64R2 = 1 << 14,
    CS_MODE_MIPS64R3 = 1 << 15,
    CS_MODE_MIPS64R5 = 1 << 16,
    CS_MODE_MIPS64R6 = 1 << 17,
    CS_MODE_OCTEON = 1 << 18,
    CS_MODE_OCTEONP = 1 << 19,
    CS_MODE_NANOMIPS = 1 << 20,
    CS_MODE_NMS1 = ((1 << 21) | CS_MODE_NANOMIPS),
    CS_MODE_I7200 = ((1 << 22) | CS_MODE_NANOMIPS),
    CS_MODE_MIPS_NOFLOAT = 1 << 23,
    CS_MODE_MIPS_PTR64 = 1 << 24,
    CS_MODE_MICRO32R3 = (CS_MODE_MICRO | CS_MODE_MIPS32R3),
    CS_MODE_MICRO32R6 = (CS_MODE_MICRO | CS_MODE_MIPS32R6),
    CS_MODE_M680X_6301 = 1 << 1,
    CS_MODE_M680X_6309 = 1 << 2,
    CS_MODE_M680X_6800 = 1 << 3,
    CS_MODE_M680X_6801 = 1 << 4,
    CS_MODE_M680X_6805 = 1 << 5,
    CS_MODE_M680X_6808 = 1 << 6,
    CS_MODE_M680X_6809 = 1 << 7,
    CS_MODE_M680X_6811 = 1 << 8,
    CS_MODE_M680X_CPU12 = 1 << 9,
    CS_MODE_M680X_HCS08 = 1 << 10,
    CS_MODE_BPF_CLASSIC = 0,
    CS_MODE_BPF_EXTENDED = 1 << 0,
    CS_MODE_RISCV32 = 1 << 0,
    CS_MODE_RISCV64 = 1 << 1,
    CS_MODE_RISCVC = 1 << 2,
    CS_MODE_MOS65XX_6502 = 1 << 1,
    CS_MODE_MOS65XX_65C02 = 1 << 2,
    CS_MODE_MOS65XX_W65C02 = 1 << 3,
    CS_MODE_MOS65XX_65816 = 1 << 4,
    CS_MODE_MOS65XX_65816_LONG_M = (1 << 5),
    CS_MODE_MOS65XX_65816_LONG_X = (1 << 6),
    CS_MODE_MOS65XX_65816_LONG_MX = CS_MODE_MOS65XX_65816_LONG_M | CS_MODE_MOS65XX_65816_LONG_X,
    CS_MODE_SH2 = 1 << 1,
    CS_MODE_SH2A = 1 << 2,
    CS_MODE_SH3 = 1 << 3,
    CS_MODE_SH4 = 1 << 4,
    CS_MODE_SH4A = 1 << 5,
    CS_MODE_SHFPU = 1 << 6,
    CS_MODE_SHDSP = 1 << 7,
    CS_MODE_TRICORE_110 = 1 << 1,
    CS_MODE_TRICORE_120 = 1 << 2,
    CS_MODE_TRICORE_130 = 1 << 3,
    CS_MODE_TRICORE_131 = 1 << 4,
    CS_MODE_TRICORE_160 = 1 << 5,
    CS_MODE_TRICORE_161 = 1 << 6,
    CS_MODE_TRICORE_162 = 1 << 7,
    CS_MODE_HPPA_11 = 1 << 1,
    CS_MODE_HPPA_20 = 1 << 2,
    CS_MODE_HPPA_20W = CS_MODE_HPPA_20 | (1 << 3),
    CS_MODE_LOONGARCH32 = 1 << 0,
    CS_MODE_LOONGARCH64 = 1 << 1,
    CS_MODE_SYSTEMZ_ARCH8 = 1 << 1,
    CS_MODE_SYSTEMZ_ARCH9 = 1 << 2,
    CS_MODE_SYSTEMZ_ARCH10 = 1 << 3,
    CS_MODE_SYSTEMZ_ARCH11 = 1 << 4,
    CS_MODE_SYSTEMZ_ARCH12 = 1 << 5,
    CS_MODE_SYSTEMZ_ARCH13 = 1 << 6,
    CS_MODE_SYSTEMZ_ARCH14 = 1 << 7,
    CS_MODE_SYSTEMZ_Z10 = 1 << 8,
    CS_MODE_SYSTEMZ_Z196 = 1 << 9,
    CS_MODE_SYSTEMZ_ZEC12 = 1 << 10,
    CS_MODE_SYSTEMZ_Z13 = 1 << 11,
    CS_MODE_SYSTEMZ_Z14 = 1 << 12,
    CS_MODE_SYSTEMZ_Z15 = 1 << 13,
    CS_MODE_SYSTEMZ_Z16 = 1 << 14,
    CS_MODE_SYSTEMZ_GENERIC = 1 << 15,
    CS_MODE_XTENSA_ESP32 = 1 << 1,
    CS_MODE_XTENSA_ESP32S2 = 1 << 2,
    CS_MODE_XTENSA_ESP8266 = 1 << 3,
}
